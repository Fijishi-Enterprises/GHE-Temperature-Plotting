
class TrClass:
    __slots__ = 'Language', 'scenarioStr', 'label_Language', 'pushButton_SaveScenario', 'pushButton_AddScenario',\
                'pushButton_DeleteScenario', 'pushButton_Start', 'pushButton_Cancel', 'pushButton_General', \
                'pushButton_thermalDemands', 'pushButton_Results', 'label_Status', 'pushButton_SaveScenariosExternal', \
                'pushButton_LoadScenarios', 'label_Borehole_earth', 'label_Earth_Properties', 'checkBox_CalcDepth', \
                'label_H', 'label_BS', 'label_lambdaEarth', 'label_GroundTemp', 'label_BoreholeResistance', \
                'label_WidthField', 'label_LengthField', 'label_TempConstraints', 'label_TempMin', 'label_TempMax', \
                'label_SimulationTime', 'pushButton_NextGeneral', 'pushButton_PreviousThermal', 'label_Size', \
                'checkBox_Legend', 'pushButton_SaveData', 'pushButton_SaveFigure', 'X_Axis', 'Y_Axis', 'BaseCooling', \
                'BaseHeating', 'PeakCooling', 'PeakHeating', 'label_ThermalDemandsTitle', 'label_Import', \
                'checkBox_Import', 'label_ThermalDemands', 'label_pH', 'label_pC', 'label_HL', 'label_CL', \
                'label_UnitPeak', 'label_UnitLoad', 'label_Jan', 'label_Feb', 'label_Mar', 'label_Apr', 'label_May', \
                'label_Jun', 'label_Jul', 'label_Aug', 'label_Sep', 'label_Oct', 'label_Nov', 'label_Dec', \
                'label_DataType', 'label_Filename', 'label_SheetName', 'pushButton_load', 'page_File', \
                'page_DataLocation', 'label_dataColumn', 'label_DataUnit', 'label_HeatingLoadLine', \
                'label_CoolingLoadLine', 'label_combined', 'label_TimeStep', 'label_DateLine', 'comboBox_dataColumn',\
                'comboBox_timeStep', 'pushButton_calculate', 'ErrorMassage', 'UnableDataFormat', 'ChooseCSV',\
                'ChooseXLS', 'ChooseXLSX', 'NoFileSelected', 'ValueError', 'ColumnError', 'ChoosePKL', 'SaveFigure', \
                'SaveData', 'SavePKL'

    def __init__(self):
        self.Language: int = 0  # 0: English; 1: German
        self.scenarioStr: str = 'Scenario'
        self.label_Language: str = 'Language:'
        self.pushButton_SaveScenario: str = 'Update scenario'
        self.pushButton_AddScenario: str = 'Add scenario'
        self.pushButton_DeleteScenario: str = 'Delete scenario'
        self.pushButton_Start: str = 'Start'
        self.pushButton_Cancel: str = 'Exit'
        self.pushButton_General: str = 'Borehole \nand earth'
        self.pushButton_thermalDemands: str = 'Thermal \ndemands'
        self.pushButton_Results: str = 'Results'
        self.label_Status: str = 'Progress: '
        self.pushButton_SaveScenariosExternal: str = 'Save Scenarios \nexternally'
        self.pushButton_LoadScenarios: str = 'Load Scenarios \nfrom extern'
        self.label_Borehole_earth: str = 'Borehole and earth'
        self.label_Earth_Properties: str = 'Borehole and earth properties'
        self.checkBox_CalcDepth: str = 'Determine the required depth'
        self.label_H: str = 'Borehole depth [m]: '
        self.label_BS: str = 'Borehole spacing [m]: '
        self.label_lambdaEarth: str = 'Conductivity of the soil [W/mK]: '
        self.label_GroundTemp: str = 'Ground temperature at infinity [°C]: '
        self.label_BoreholeResistance: str = 'Equivalent borehole resistance [mK/W]: '
        self.label_WidthField: str = 'Width of rectangular field [#]: '
        self.label_LengthField: str = 'Length of rectangular field [#]: '
        self.label_TempConstraints: str = 'Temperature constraints and simulation period'
        self.label_TempMin: str = 'Minimal temperature [°C]: '
        self.label_TempMax: str = 'Maximal temperature [°C]: '
        self.label_SimulationTime: str = 'Simulation period [yrs]: '
        self.pushButton_NextGeneral: str = '  next  '
        self.pushButton_PreviousThermal: str = '  previous  '
        self.label_Size: str = 'Borehole depth: '
        self.checkBox_Legend: str = 'Show legend?'
        self.pushButton_SaveData: str = 'Save results'
        self.pushButton_SaveFigure: str = 'Save figure'
        self.X_Axis: str = 'Time [year]'
        self.Y_Axis: str = 'Temperature [°C]'
        self.BaseCooling: str = 'base cooling'
        self.BaseHeating: str = 'base heating'
        self.PeakCooling: str = 'peak cooling'
        self.PeakHeating: str = 'peak heating'
        self.label_ThermalDemandsTitle: str = 'Thermal demands'
        self.label_Import: str = 'Import'
        self.checkBox_Import: str = 'Import Demands?'
        self.label_ThermalDemands: str = 'Thermal demands'
        self.label_pH: str = 'Heating peak'
        self.label_pC: str = 'Cooling peak'
        self.label_HL: str = 'Heating load'
        self.label_CL: str = 'Cooling load'
        self.label_UnitPeak: str = 'Peak unit: '
        self.label_UnitLoad: str = 'Load unit: '
        self.label_Jan: str = 'January'
        self.label_Feb: str = 'February'
        self.label_Mar: str = 'March'
        self.label_Apr: str = 'April'
        self.label_May: str = 'May'
        self.label_Jun: str = 'June'
        self.label_Jul: str = 'July'
        self.label_Aug: str = 'August'
        self.label_Sep: str = 'September'
        self.label_Oct: str = 'October'
        self.label_Nov: str = 'November'
        self.label_Dec: str = 'December'
        self.label_DataType: str = 'File type: '
        self.label_Filename: str = 'Filename: '
        self.label_SheetName: str = 'Sheet name: '
        self.pushButton_load: str = 'Load'
        self.page_File: str = 'Data file'
        self.page_DataLocation: str = 'Data location in file'
        self.label_dataColumn: str = 'Thermal demands: '
        self.label_DataUnit: str = 'Unit data: '
        self.label_HeatingLoadLine: str = 'Heating load line: '
        self.label_CoolingLoadLine: str = 'Cooling load line: '
        self.label_combined: str = 'Load line: '
        self.label_TimeStep: str = 'Time step: '
        self.label_DateLine: str = 'Date line: '
        self.comboBox_dataColumn: list = ['2 columns', '1 column']
        self.comboBox_timeStep: list = ['1 hr.', '15 Min.', 'Automatic']
        self.pushButton_calculate: str = 'Calculate'
        self.ErrorMassage: str = 'Error!'
        self.UnableDataFormat: str = 'Unable to open selected data format!'
        self.ChooseCSV: str = 'Choose csv to load data file'
        self.ChooseXLS: str = 'Choose xlsx to load data file'
        self.ChooseXLSX: str = 'Choose xls to load data file'
        self.NoFileSelected: str = 'No file selected.'
        self.ValueError: str = 'Value error: check selected columns'
        self.ColumnError: str = 'Wrong column: check selected columns'
        self.ChoosePKL: str = 'Choose pkl to load scenarios'
        self.SaveFigure: str = 'Choose png location to save figure'
        self.SaveData: str = 'Choose csv location to save results'
        self.SavePKL: str = 'Choose pkl location to save scenarios'

    def ChangeLanguage(self, Lang: int):
        self.Language: int = Lang
        if Lang == 0:  # english
            self.label_Language: str = 'Language:'
            self.pushButton_SaveScenario: str = 'Update scenario'
            self.pushButton_AddScenario: str = 'Add scenario'
            self.pushButton_DeleteScenario: str = 'Delete scenario'
            self.scenarioStr: str = 'Scenario'
            self.pushButton_Start: str = 'Start'
            self.pushButton_Cancel: str = 'Exit'
            self.pushButton_General: str = 'Borehole \nand earth'
            self.pushButton_thermalDemands: str = 'Thermal \ndemands'
            self.pushButton_Results: str = 'Results'
            self.label_Status: str = 'Progress: '
            self.pushButton_SaveScenariosExternal: str = 'Save Scenarios \nexternally'
            self.pushButton_LoadScenarios: str = 'Load Scenarios \nfrom extern'
            self.label_Borehole_earth: str = 'Borehole and earth'
            self.label_Earth_Properties: str = 'Borehole and earth properties'
            self.checkBox_CalcDepth: str = 'Determine the required depth'
            self.label_H: str = 'Borehole depth [m]: '
            self.label_BS: str = 'Borehole spacing [m]: '
            self.label_lambdaEarth: str = 'Conductivity of the soil [W/mK]: '
            self.label_GroundTemp: str = 'Ground temperature at infinity [°C]: '
            self.label_BoreholeResistance: str = 'Equivalent borehole resistance [mK/W]: '
            self.label_WidthField: str = 'Width of rectangular field [#]: '
            self.label_LengthField: str = 'Length of rectangular field [#]: '
            self.label_TempConstraints: str = 'Temperature constraints and simulation period'
            self.label_TempMin: str = 'Minimal temperature [°C]: '
            self.label_TempMax: str = 'Maximal temperature [°C]: '
            self.label_SimulationTime: str = 'Simulation period [yrs]: '
            self.pushButton_NextGeneral: str = '  next  '
            self.pushButton_PreviousThermal: str = '  previous  '
            self.label_Size: str = 'Borehole depth: '
            self.checkBox_Legend: str = 'Show legend?'
            self.pushButton_SaveData: str = 'Save results'
            self.pushButton_SaveFigure: str = 'Save figure'
            self.X_Axis: str = 'Time [year]'
            self.Y_Axis: str = 'Temperature [°C]'
            self.BaseCooling: str = 'base cooling'
            self.BaseHeating: str = 'base heating'
            self.PeakCooling: str = 'peak cooling'
            self.PeakHeating: str = 'peak heating'
            self.label_ThermalDemandsTitle: str = 'Thermal demands'
            self.label_Import: str = 'Import'
            self.checkBox_Import: str = 'Import Demands?'
            self.label_ThermalDemands: str = 'Thermal demands'
            self.label_pH: str = 'Heating peak'
            self.label_pC: str = 'Cooling peak'
            self.label_HL: str = 'Heating load'
            self.label_CL: str = 'Cooling load'
            self.label_UnitPeak: str = 'Peak unit: '
            self.label_UnitLoad: str = 'Load unit: '
            self.label_Jan: str = 'January'
            self.label_Feb: str = 'February'
            self.label_Mar: str = 'March'
            self.label_Apr: str = 'April'
            self.label_May: str = 'May'
            self.label_Jun: str = 'June'
            self.label_Jul: str = 'July'
            self.label_Aug: str = 'August'
            self.label_Sep: str = 'September'
            self.label_Oct: str = 'October'
            self.label_Nov: str = 'November'
            self.label_Dec: str = 'December'
            self.label_DataType: str = 'File type: '
            self.label_Filename: str = 'Filename: '
            self.label_SheetName: str = 'Sheet name: '
            self.pushButton_load: str = 'Load'
            self.page_File: str = 'Data file'
            self.page_DataLocation: str = 'Data location in file'
            self.label_dataColumn: str = 'Thermal demands: '
            self.label_DataUnit: str = 'Unit data: '
            self.label_HeatingLoadLine: str = 'Heating load line: '
            self.label_CoolingLoadLine: str = 'Cooling load line: '
            self.label_combined: str = 'Load line: '
            self.label_TimeStep: str = 'Time step: '
            self.label_DateLine: str = 'Date line: '
            self.comboBox_dataColumn: list = ['2 columns', '1 column']
            self.comboBox_timeStep: list = ['1 hr.', '15 Min.', 'Automatic']
            self.pushButton_calculate: str = 'Calculate'
            self.ErrorMassage: str = 'Error!'
            self.UnableDataFormat: str = 'Unable to open selected data format!'
            self.ChooseCSV: str = 'Choose csv to load data file'
            self.ChooseXLS: str = 'Choose xlsx to load data file'
            self.ChooseXLSX: str = 'Choose xls to load data file'
            self.NoFileSelected: str = 'No file selected.'
            self.ValueError: str = 'Value error: check selected columns'
            self.ColumnError: str = 'Wrong column: check selected columns'
            self.ChoosePKL: str = 'Choose pkl to load scenarios'
            self.SaveFigure: str = 'Choose png location to save figure'
            self.SaveData: str = 'Choose csv location to save results'
            self.SavePKL: str = 'Choose pkl location to save scenarios'
            return
        if Lang == 1:  # german
            self.label_Language: str = 'Sprache:'
            self.pushButton_SaveScenario: str = 'Szenario aktualisieren'
            self.pushButton_AddScenario: str = 'Szenario hinzufügen'
            self.pushButton_DeleteScenario: str = 'Szenario löschen'
            self.scenarioStr: str = 'Szenario'
            self.pushButton_Start: str = 'Starten'
            self.pushButton_Cancel: str = 'Verlassen'
            self.pushButton_General: str = 'Bohrloch \nund Erdreich'
            self.pushButton_thermalDemands: str = 'Thermischer \nBedarf'
            self.pushButton_Results: str = 'Ergebnisse'
            self.label_Status: str = 'Fortschritt: '
            self.pushButton_SaveScenariosExternal: str = 'Speichere Szenarios \nextern'
            self.pushButton_LoadScenarios: str = 'Lade externe \nSzenarios'
            self.label_Borehole_earth: str = 'Bohrloch und Erdreich'
            self.label_Earth_Properties: str = 'Bohrloch und Erdreicheigenschaften'
            self.checkBox_CalcDepth: str = 'Notwendige Bohrlochlänge bestimmen'
            self.label_H: str = 'Bohrlochtiefe [m]: '
            self.label_BS: str = 'Bohrlochabstand [m]: '
            self.label_lambdaEarth: str = 'Wärmeleitfähigkeit des Erdreiches [W/mK]: '
            self.label_GroundTemp: str = 'Erdreichtemperatur in der Unendlichkeit [°C]: '
            self.label_BoreholeResistance: str = 'Äquivalenter Bohrlochwiderstand [mK/W]: '
            self.label_WidthField: str = 'Breite des rechteckigen Feldes [#]: '
            self.label_LengthField: str = 'Länge des rechteckigen Feldes [#]: '
            self.label_TempConstraints: str = 'Temperaturgrenzwerte und Simulationszeit'
            self.label_TempMin: str = 'Minimaltemperatur [°C]: '
            self.label_TempMax: str = 'Maximaltemperatur [°C]: '
            self.label_SimulationTime: str = 'Simulationszeit [Jahre]: '
            self.pushButton_NextGeneral: str = '  nächstes  '
            self.pushButton_PreviousThermal: str = '  vorheriges  '
            self.label_Size: str = 'Bohrlochtiefe: '
            self.checkBox_Legend: str = 'Legende zeigen?'
            self.pushButton_SaveData: str = 'Ergebnisse speichern'
            self.pushButton_SaveFigure: str = 'Abbildung speichern'
            self.X_Axis: str = 'Zeit [Jahr]'
            self.Y_Axis: str = 'Temperatur [°C]'
            self.BaseCooling: str = 'Grundkühlung'
            self.BaseHeating: str = 'Grundheizung'
            self.PeakCooling: str = 'Kühlspitzen'
            self.PeakHeating: str = 'Heizspitzen'
            self.label_ThermalDemandsTitle: str = 'Thermische Last'
            self.label_Import: str = 'Importieren'
            self.checkBox_Import: str = 'Lasten importieren?'
            self.label_ThermalDemands: str = 'Thermische Last'
            self.label_pH: str = 'Heizspitzen'
            self.label_pC: str = 'Kühlspitzen'
            self.label_HL: str = 'Heizlast'
            self.label_CL: str = 'Kühllast'
            self.label_UnitPeak: str = 'Einheit Spitze: '
            self.label_UnitLoad: str = 'Einheit Last: '
            self.label_Jan: str = 'Januar'
            self.label_Feb: str = 'Februar'
            self.label_Mar: str = 'März'
            self.label_Apr: str = 'April'
            self.label_May: str = 'Mai'
            self.label_Jun: str = 'Juni'
            self.label_Jul: str = 'Juli'
            self.label_Aug: str = 'August'
            self.label_Sep: str = 'September'
            self.label_Oct: str = 'Oktober'
            self.label_Nov: str = 'November'
            self.label_Dec: str = 'Dezember'
            self.label_DataType: str = 'Dateityp: '
            self.label_Filename: str = 'Dateiname: '
            self.label_SheetName: str = 'Tabellenblattname: '
            self.pushButton_load: str = 'Laden'
            self.page_File: str = 'Datendatei'
            self.page_DataLocation: str = 'Speicherort der Daten in der Datei'
            self.label_dataColumn: str = 'Thermische Lasten: '
            self.label_DataUnit: str = 'Dateneinheit: '
            self.label_HeatingLoadLine: str = 'Heizlastspalte: '
            self.label_CoolingLoadLine: str = 'Kühllastspalte: '
            self.label_combined: str = 'Load line: '
            self.label_TimeStep: str = 'Zeitschritt: '
            self.label_DateLine: str = 'Datumsspalte: '
            self.comboBox_dataColumn: list = ['2 Spalten', '1 Spalte']
            self.comboBox_timeStep: list = ['1 Std.', '15 Min.', 'Automatisch']
            self.pushButton_calculate: str = 'Berechne'
            self.ErrorMassage: str = 'Fehler!'
            self.UnableDataFormat: str = 'Das ausgewählte Datenformat kann nicht geöffnet werden!'
            self.ChooseCSV: str = 'Wählen Sie csv zum Laden einer Datendatei'
            self.ChooseXLS: str = 'Wählen Sie xlsx zum Laden einer Datendatei'
            self.ChooseXLSX: str = 'Wählen Sie xls zum Laden einer Datendatei'
            self.NoFileSelected: str = 'Keine Datei ausgewählt.'
            self.ValueError: str = 'Wertefehler: ausgewählte Spalten prüfen'
            self.ColumnError: str = 'Falsche Spalte: ausgewählte Spalten prüfen'
            self.ChoosePKL: str = 'Wählen Sie pkl zum Laden von Szenarien'
            self.SaveFigure: str = 'Wählen Sie einen png-Speicherort für die Abbildung'
            self.SaveData: str = 'Wählen Sie einen csv-Speicherort zum Speichern der Ergebnisse'
            self.SavePKL: str = 'Wählen Sie den pkl-Speicherort zum Speichern von Szenarien'
            return

