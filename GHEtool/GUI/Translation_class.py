
class TrClass:
    __slots__ = 'Language', 'scenarioStr', 'label_Language', 'pushButton_SaveScenario', 'pushButton_AddScenario',\
                'pushButton_DeleteScenario', 'pushButton_Start', 'pushButton_Cancel', 'pushButton_General', \
                'pushButton_thermalDemands', 'pushButton_Results', 'label_Status', 'pushButton_SaveScenariosExternal', \
                'pushButton_LoadScenarios', 'label_Borehole_earth', 'label_Earth_Properties', 'checkBox_CalcDepth', \
                'label_H', 'label_BS', 'label_lambdaEarth', 'label_GroundTemp', 'label_BoreholeResistance', \
                'label_WidthField', 'label_LengthField', 'label_TempConstraints', 'label_TempMin', 'label_TempMax', \
                'label_SimulationTime', 'pushButton_NextGeneral', 'pushButton_PreviousThermal', 'label_Size', \
                'checkBox_Legend', 'pushButton_SaveData', 'pushButton_SaveFigure', 'X_Axis', 'Y_Axis', 'BaseCooling', \
                'BaseHeating', 'PeakCooling', 'PeakHeating', 'label_ThermalDemandsTitle', 'label_Import', \
                'checkBox_Import', 'label_ThermalDemands', 'label_pH', 'label_pC', 'label_HL', 'label_CL', \
                'label_UnitPeak', 'label_UnitLoad', 'label_Jan', 'label_Feb', 'label_Mar', 'label_Apr', 'label_May', \
                'label_Jun', 'label_Jul', 'label_Aug', 'label_Sep', 'label_Oct', 'label_Nov', 'label_Dec', \
                'label_DataType', 'label_Filename', 'label_SheetName', 'pushButton_load', 'page_File', \
                'page_DataLocation', 'label_dataColumn', 'label_DataUnit', 'label_HeatingLoadLine', \
                'label_CoolingLoadLine', 'label_combined', 'label_TimeStep', 'label_DateLine', 'comboBox_dataColumn',\
                'comboBox_timeStep', 'pushButton_calculate', 'ErrorMassage', 'UnableDataFormat', 'ChooseCSV',\
                'ChooseXLS', 'ChooseXLSX', 'NoFileSelected', 'ValueError', 'ColumnError', 'ChoosePKL', 'SaveFigure', \
                'SaveData', 'SavePKL', 'label_WarningCustomBorefield', 'label_WarningDepth'

    def __init__(self) -> None:
        """This function initialize the translation class"""
        self.Language: int = 0  # 0: English; 1: German; 2: Dutch; 3: French; 4: Italian
        self.label_Language: str = ''
        self.pushButton_SaveScenario: str = ''
        self.pushButton_AddScenario: str = ''
        self.pushButton_DeleteScenario: str = ''
        self.scenarioStr: str = ''
        self.pushButton_Start: str = ''
        self.pushButton_Cancel: str = ''
        self.pushButton_General: str = ''
        self.pushButton_thermalDemands: str = ''
        self.pushButton_Results: str = ''
        self.label_Status: str = ''
        self.pushButton_SaveScenariosExternal: str = ''
        self.pushButton_LoadScenarios: str = ''
        self.label_Borehole_earth: str = ''
        self.label_Earth_Properties: str = ''
        self.checkBox_CalcDepth: str = ''
        self.label_H: str = ''
        self.label_BS: str = ''
        self.label_lambdaEarth: str = ''
        self.label_GroundTemp: str = ''
        self.label_BoreholeResistance: str = ''
        self.label_WidthField: str = ''
        self.label_LengthField: str = ''
        self.label_TempConstraints: str = ''
        self.label_TempMin: str = ''
        self.label_TempMax: str = ''
        self.label_SimulationTime: str = ''
        self.pushButton_NextGeneral: str = ''
        self.pushButton_PreviousThermal: str = ''
        self.label_Size: str = ''
        self.checkBox_Legend: str = ''
        self.pushButton_SaveData: str = ''
        self.pushButton_SaveFigure: str = ''
        self.X_Axis: str = ''
        self.Y_Axis: str = ''
        self.BaseCooling: str = ''
        self.BaseHeating: str = ''
        self.PeakCooling: str = ''
        self.PeakHeating: str = ''
        self.label_ThermalDemandsTitle: str = ''
        self.label_Import: str = ''
        self.checkBox_Import: str = ''
        self.label_ThermalDemands: str = ''
        self.label_pH: str = ''
        self.label_pC: str = ''
        self.label_HL: str = ''
        self.label_CL: str = ''
        self.label_UnitPeak: str = ''
        self.label_UnitLoad: str = ''
        self.label_Jan: str = ''
        self.label_Feb: str = ''
        self.label_Mar: str = ''
        self.label_Apr: str = ''
        self.label_May: str = ''
        self.label_Jun: str = ''
        self.label_Jul: str = ''
        self.label_Aug: str = ''
        self.label_Sep: str = ''
        self.label_Oct: str = ''
        self.label_Nov: str = ''
        self.label_Dec: str = ''
        self.label_DataType: str = ''
        self.label_Filename: str = ''
        self.label_SheetName: str = ''
        self.pushButton_load: str = ''
        self.page_File: str = ''
        self.page_DataLocation: str = ''
        self.label_dataColumn: str = ''
        self.label_DataUnit: str = ''
        self.label_HeatingLoadLine: str = ''
        self.label_CoolingLoadLine: str = ''
        self.label_combined: str = ''
        self.label_TimeStep: str = ''
        self.label_DateLine: str = ''
        self.comboBox_dataColumn: list = ['', '']
        self.comboBox_timeStep: list = ['', '', '']
        self.pushButton_calculate: str = ''
        self.ErrorMassage: str = ''
        self.UnableDataFormat: str = ''
        self.ChooseCSV: str = ''
        self.ChooseXLS: str = ''
        self.ChooseXLSX: str = ''
        self.NoFileSelected: str = ''
        self.ValueError: str = ''
        self.ColumnError: str = ''
        self.ChoosePKL: str = ''
        self.SaveFigure: str = ''
        self.SaveData: str = ''
        self.SavePKL: str = ''
        self.label_WarningCustomBorefield: str = ''
        self.label_WarningDepth: str = ''
        self.ChangeLanguage(self.Language)

    def ChangeLanguage(self, Lang: int) -> None:
        """
        Change language to:
        0: English
        1: German
        2: Dutch
        3: French
        4: Italian

        Parameters
        ----------
        Lang : int
            Integer of language 0: English; 1: German

        Returns
        -------
        None

        Examples
        --------
        ChangeLanguage(0)

        """
        self.Language: int = Lang
        if Lang == 0:  # english
            self.label_Language: str = 'Language:'
            self.pushButton_SaveScenario: str = 'Update scenario'
            self.pushButton_AddScenario: str = 'Add scenario'
            self.pushButton_DeleteScenario: str = 'Delete scenario'
            self.scenarioStr: str = 'Scenario'
            self.pushButton_Start: str = 'Start'
            self.pushButton_Cancel: str = 'Exit'
            self.pushButton_General: str = 'Borehole \nand earth'
            self.pushButton_thermalDemands: str = 'Thermal \ndemands'
            self.pushButton_Results: str = 'Results'
            self.label_Status: str = 'Progress: '
            self.pushButton_SaveScenariosExternal: str = 'Save Scenarios \nexternally'
            self.pushButton_LoadScenarios: str = 'Load Scenarios \nfrom extern'
            self.label_Borehole_earth: str = 'Borehole and earth'
            self.label_Earth_Properties: str = 'Borehole and earth properties'
            self.checkBox_CalcDepth: str = 'Determine the required depth'
            self.label_H: str = 'Borehole depth [m]: '
            self.label_BS: str = 'Borehole spacing [m]: '
            self.label_lambdaEarth: str = 'Conductivity of the soil [W/mK]: '
            self.label_GroundTemp: str = 'Ground temperature at infinity [°C]: '
            self.label_BoreholeResistance: str = 'Equivalent borehole resistance [mK/W]: '
            self.label_WidthField: str = 'Width of rectangular field [#]: '
            self.label_LengthField: str = 'Length of rectangular field [#]: '
            self.label_TempConstraints: str = 'Temperature constraints and simulation period'
            self.label_TempMin: str = 'Minimal temperature [°C]: '
            self.label_TempMax: str = 'Maximal temperature [°C]: '
            self.label_SimulationTime: str = 'Simulation period [yrs]: '
            self.pushButton_NextGeneral: str = '  next  '
            self.pushButton_PreviousThermal: str = '  previous  '
            self.label_Size: str = 'Borehole depth: '
            self.checkBox_Legend: str = 'Show legend?'
            self.pushButton_SaveData: str = 'Save results'
            self.pushButton_SaveFigure: str = 'Save figure'
            self.X_Axis: str = 'Time [year]'
            self.Y_Axis: str = 'Temperature [°C]'
            self.BaseCooling: str = 'base cooling'
            self.BaseHeating: str = 'base heating'
            self.PeakCooling: str = 'peak cooling'
            self.PeakHeating: str = 'peak heating'
            self.label_ThermalDemandsTitle: str = 'Thermal demands'
            self.label_Import: str = 'Import'
            self.checkBox_Import: str = 'Import Demands?'
            self.label_ThermalDemands: str = 'Thermal demands'
            self.label_pH: str = 'Heating peak'
            self.label_pC: str = 'Cooling peak'
            self.label_HL: str = 'Heating load'
            self.label_CL: str = 'Cooling load'
            self.label_UnitPeak: str = 'Peak unit: '
            self.label_UnitLoad: str = 'Load unit: '
            self.label_Jan: str = 'January'
            self.label_Feb: str = 'February'
            self.label_Mar: str = 'March'
            self.label_Apr: str = 'April'
            self.label_May: str = 'May'
            self.label_Jun: str = 'June'
            self.label_Jul: str = 'July'
            self.label_Aug: str = 'August'
            self.label_Sep: str = 'September'
            self.label_Oct: str = 'October'
            self.label_Nov: str = 'November'
            self.label_Dec: str = 'December'
            self.label_DataType: str = 'File type: '
            self.label_Filename: str = 'Filename: '
            self.label_SheetName: str = 'Sheet name: '
            self.pushButton_load: str = 'Load'
            self.page_File: str = 'Data file'
            self.page_DataLocation: str = 'Data location in file'
            self.label_dataColumn: str = 'Thermal demands: '
            self.label_DataUnit: str = 'Unit data: '
            self.label_HeatingLoadLine: str = 'Heating load line: '
            self.label_CoolingLoadLine: str = 'Cooling load line: '
            self.label_combined: str = 'Load line: '
            self.label_TimeStep: str = 'Time step: '
            self.label_DateLine: str = 'Date line: '
            self.comboBox_dataColumn: list = ['2 columns', '1 column']
            self.comboBox_timeStep: list = ['1 hr.', '15 Min.', 'Automatic']
            self.pushButton_calculate: str = 'Calculate'
            self.ErrorMassage: str = 'Error!'
            self.UnableDataFormat: str = 'Unable to open selected data format!'
            self.ChooseCSV: str = 'Choose csv to load data file'
            self.ChooseXLS: str = 'Choose xlsx to load data file'
            self.ChooseXLSX: str = 'Choose xls to load data file'
            self.NoFileSelected: str = 'No file selected.'
            self.ValueError: str = 'Value error: check selected columns'
            self.ColumnError: str = 'Wrong column: check selected columns'
            self.ChoosePKL: str = 'Choose pkl to load scenarios'
            self.SaveFigure: str = 'Choose png location to save figure'
            self.SaveData: str = 'Choose csv location to save results'
            self.SavePKL: str = 'Choose pkl location to save scenarios'
            self.label_WarningCustomBorefield: str = 'With the selected values a customized bore field will be ' \
                                                     'calculated. This will dramatically increase the calculation time.'
            self.label_WarningDepth: str = 'The calculated size is below the suggested minimum of 15 m. The ' \
                                           'calculation may be incorrect.'
            return
        if Lang == 1:  # german
            self.label_Language: str = 'Sprache:'
            self.pushButton_SaveScenario: str = 'Szenario aktualisieren'
            self.pushButton_AddScenario: str = 'Szenario hinzufügen'
            self.pushButton_DeleteScenario: str = 'Szenario löschen'
            self.scenarioStr: str = 'Szenario'
            self.pushButton_Start: str = 'Starten'
            self.pushButton_Cancel: str = 'Verlassen'
            self.pushButton_General: str = 'Bohrloch \nund Erdreich'
            self.pushButton_thermalDemands: str = 'Thermischer \nBedarf'
            self.pushButton_Results: str = 'Ergebnisse'
            self.label_Status: str = 'Fortschritt: '
            self.pushButton_SaveScenariosExternal: str = 'Speichere Szenarios \nextern'
            self.pushButton_LoadScenarios: str = 'Lade externe \nSzenarios'
            self.label_Borehole_earth: str = 'Bohrloch und Erdreich'
            self.label_Earth_Properties: str = 'Bohrloch und Erdreicheigenschaften'
            self.checkBox_CalcDepth: str = 'Notwendige Bohrlochlänge bestimmen'
            self.label_H: str = 'Bohrlochtiefe [m]: '
            self.label_BS: str = 'Bohrlochabstand [m]: '
            self.label_lambdaEarth: str = 'Wärmeleitfähigkeit des Erdreiches [W/mK]: '
            self.label_GroundTemp: str = 'Erdreichtemperatur in der Unendlichkeit [°C]: '
            self.label_BoreholeResistance: str = 'Äquivalenter Bohrlochwiderstand [mK/W]: '
            self.label_WidthField: str = 'Breite des rechteckigen Feldes [#]: '
            self.label_LengthField: str = 'Länge des rechteckigen Feldes [#]: '
            self.label_TempConstraints: str = 'Temperaturgrenzwerte und Simulationszeit'
            self.label_TempMin: str = 'Minimaltemperatur [°C]: '
            self.label_TempMax: str = 'Maximaltemperatur [°C]: '
            self.label_SimulationTime: str = 'Simulationszeit [Jahre]: '
            self.pushButton_NextGeneral: str = '  nächstes  '
            self.pushButton_PreviousThermal: str = '  vorheriges  '
            self.label_Size: str = 'Bohrlochtiefe: '
            self.checkBox_Legend: str = 'Legende zeigen?'
            self.pushButton_SaveData: str = 'Ergebnisse speichern'
            self.pushButton_SaveFigure: str = 'Abbildung speichern'
            self.X_Axis: str = 'Zeit [Jahr]'
            self.Y_Axis: str = 'Temperatur [°C]'
            self.BaseCooling: str = 'Grundkühlung'
            self.BaseHeating: str = 'Grundheizung'
            self.PeakCooling: str = 'Kühlspitzen'
            self.PeakHeating: str = 'Heizspitzen'
            self.label_ThermalDemandsTitle: str = 'Thermische Last'
            self.label_Import: str = 'Importieren'
            self.checkBox_Import: str = 'Lasten importieren?'
            self.label_ThermalDemands: str = 'Thermische Last'
            self.label_pH: str = 'Heizspitzen'
            self.label_pC: str = 'Kühlspitzen'
            self.label_HL: str = 'Heizlast'
            self.label_CL: str = 'Kühllast'
            self.label_UnitPeak: str = 'Einheit Spitze: '
            self.label_UnitLoad: str = 'Einheit Last: '
            self.label_Jan: str = 'Januar'
            self.label_Feb: str = 'Februar'
            self.label_Mar: str = 'März'
            self.label_Apr: str = 'April'
            self.label_May: str = 'Mai'
            self.label_Jun: str = 'Juni'
            self.label_Jul: str = 'Juli'
            self.label_Aug: str = 'August'
            self.label_Sep: str = 'September'
            self.label_Oct: str = 'Oktober'
            self.label_Nov: str = 'November'
            self.label_Dec: str = 'Dezember'
            self.label_DataType: str = 'Dateityp: '
            self.label_Filename: str = 'Dateiname: '
            self.label_SheetName: str = 'Tabellenblattname: '
            self.pushButton_load: str = 'Laden'
            self.page_File: str = 'Datendatei'
            self.page_DataLocation: str = 'Speicherort der Daten in der Datei'
            self.label_dataColumn: str = 'Thermische Lasten: '
            self.label_DataUnit: str = 'Dateneinheit: '
            self.label_HeatingLoadLine: str = 'Heizlastspalte: '
            self.label_CoolingLoadLine: str = 'Kühllastspalte: '
            self.label_combined: str = 'Load line: '
            self.label_TimeStep: str = 'Zeitschritt: '
            self.label_DateLine: str = 'Datumsspalte: '
            self.comboBox_dataColumn: list = ['2 Spalten', '1 Spalte']
            self.comboBox_timeStep: list = ['1 Std.', '15 Min.', 'Automatisch']
            self.pushButton_calculate: str = 'Berechne'
            self.ErrorMassage: str = 'Fehler!'
            self.UnableDataFormat: str = 'Das ausgewählte Datenformat kann nicht geöffnet werden!'
            self.ChooseCSV: str = 'Wählen Sie csv zum Laden einer Datendatei'
            self.ChooseXLS: str = 'Wählen Sie xlsx zum Laden einer Datendatei'
            self.ChooseXLSX: str = 'Wählen Sie xls zum Laden einer Datendatei'
            self.NoFileSelected: str = 'Keine Datei ausgewählt.'
            self.ValueError: str = 'Wertefehler: ausgewählte Spalten prüfen'
            self.ColumnError: str = 'Falsche Spalte: ausgewählte Spalten prüfen'
            self.ChoosePKL: str = 'Wählen Sie pkl zum Laden von Szenarien'
            self.SaveFigure: str = 'Wählen Sie einen png-Speicherort für die Abbildung'
            self.SaveData: str = 'Wählen Sie einen csv-Speicherort zum Speichern der Ergebnisse'
            self.SavePKL: str = 'Wählen Sie den pkl-Speicherort zum Speichern von Szenarien'
            self.label_WarningCustomBorefield: str = 'Mit den gewählten Werten wird ein individuelles Borefeld ' \
                                                     'berechnet. Dadurch wird die Berechnungszeit drastisch erhöht.'
            self.label_WarningDepth: str = 'Die berechnete Größe liegt unter dem empfohlenen Minimum von 15 m. Die ' \
                                           'Berechnung ist möglicherweise fehlerhaft.'
            return
        if Lang == 2:  # Dutch # thanks to Wouter
            self.label_Language: str = 'Taal:'
            self.pushButton_SaveScenario: str = 'Update scenario'
            self.pushButton_AddScenario: str = 'Nieuw scenario'
            self.pushButton_DeleteScenario: str = 'Verwijder scenario'
            self.scenarioStr: str = 'Scenario'
            self.pushButton_Start: str = 'Start'
            self.pushButton_Cancel: str = 'Sluit'
            self.pushButton_General: str = 'Boorveld \n en grond'
            self.pushButton_thermalDemands: str = 'Thermische \nvraag'
            self.pushButton_Results: str = 'Resultaten'
            self.label_Status: str = 'Vooruitgang: '
            self.pushButton_SaveScenariosExternal: str = 'Sla scenarios \nop'
            self.pushButton_LoadScenarios: str = 'Laad externe scenarios'
            self.label_Borehole_earth: str = 'Boorveld en grond'
            self.label_Earth_Properties: str = 'Eigenschappen van boorveld en grond'
            self.checkBox_CalcDepth: str = 'Bepaal de benodigde diepte'
            self.label_H: str = 'Boorgatdiepte [m]: '
            self.label_BS: str = 'Boorgatspatiring [m]: '
            self.label_lambdaEarth: str = 'Conductiviteit van de bodem [W/mK]: '
            self.label_GroundTemp: str = 'Grondtemperatuur op oneindig [°C]: '
            self.label_BoreholeResistance: str = 'Equivalente boorgatweerstand [mK/W]: '
            self.label_WidthField: str = 'Breedte van het rechthoekige veld [#]: '
            self.label_LengthField: str = 'Lengte van het rechthoekige veld [#]: '
            self.label_TempConstraints: str = 'Temperatuursgrenzen en simulatieperiode'
            self.label_TempMin: str = 'Minimale temperatuur [°C]: '
            self.label_TempMax: str = 'Maximale temperatuur [°C]: '
            self.label_SimulationTime: str = 'Simulatieperiode [jaar]: '
            self.pushButton_NextGeneral: str = '  volgende  '
            self.pushButton_PreviousThermal: str = '  vorige  '
            self.label_Size: str = 'Boorgatdiepte: '
            self.checkBox_Legend: str = 'Toon legende?'
            self.pushButton_SaveData: str = 'Bewaar resultaten'
            self.pushButton_SaveFigure: str = 'Bewaar figuren'
            self.X_Axis: str = 'Tijd [jaar]'
            self.Y_Axis: str = 'Temperatuur [°C]'
            self.BaseCooling: str = 'basisbelasting koeling'
            self.BaseHeating: str = 'basisbelasting verwarming'
            self.PeakCooling: str = 'piekkoeling'
            self.PeakHeating: str = 'piekverwarming'
            self.label_ThermalDemandsTitle: str = 'Thermische vraag'
            self.label_Import: str = 'Importeer'
            self.checkBox_Import: str = 'Importeer vraag?'
            self.label_ThermalDemands: str = 'Thermische vraag'
            self.label_pH: str = 'Verwarmingspiek'
            self.label_pC: str = 'Koelpiek'
            self.label_HL: str = 'Belasting verwarming'
            self.label_CL: str = 'Belasting koeling'
            self.label_UnitPeak: str = 'Eenheid piek: '
            self.label_UnitLoad: str = 'Eenheid belasting: '
            self.label_Jan: str = 'Januarie'
            self.label_Feb: str = 'Februarie'
            self.label_Mar: str = 'Maaart'
            self.label_Apr: str = 'April'
            self.label_May: str = 'Mei'
            self.label_Jun: str = 'Juni'
            self.label_Jul: str = 'July'
            self.label_Aug: str = 'Augustus'
            self.label_Sep: str = 'September'
            self.label_Oct: str = 'Oktober'
            self.label_Nov: str = 'November'
            self.label_Dec: str = 'December'
            self.label_DataType: str = 'Bestandstype: '
            self.label_Filename: str = 'Bestandsnaam: '
            self.label_SheetName: str = 'Naam van het blad: '
            self.pushButton_load: str = 'Laad'
            self.page_File: str = 'Databestand'
            self.page_DataLocation: str = 'Locatie van de data in bestand'
            self.label_dataColumn: str = 'Thermische vraag: '
            self.label_DataUnit: str = 'Eenheid data: '
            self.label_HeatingLoadLine: str = 'Belastingslijn verwarming: '
            self.label_CoolingLoadLine: str = 'Belastingslijn koeling: '
            self.label_combined: str = 'Belastingslijn: '
            self.label_TimeStep: str = 'Tijdsstap: '
            self.label_DateLine: str = 'Datumlijn: '
            self.comboBox_dataColumn: list = ['2 kolommen', '1 kolom']
            self.comboBox_timeStep: list = ['1 uur', '15 min.', 'Automatisch']
            self.pushButton_calculate: str = 'Bereken'
            self.ErrorMassage: str = 'Error!'
            self.UnableDataFormat: str = 'Het is niet mogelijk het geselecteerde dataformaat te openen!'
            self.ChooseCSV: str = 'Selecteer csv'
            self.ChooseXLS: str = 'Selecteer xlsx'
            self.ChooseXLSX: str = 'Selecteer xls'
            self.NoFileSelected: str = 'Geen bestand geselecteerd.'
            self.ValueError: str = 'Value error: controleer geselecteerde kolommen'
            self.ColumnError: str = 'Wrong column: controleer geselecteerde kolommen'
            self.ChoosePKL: str = 'Kies pkl bestand'
            self.SaveFigure: str = 'Kies gewenste png locatie'
            self.SaveData: str = 'Kies gewenste csv locatie'
            self.SavePKL: str = 'Kies gewenste pkl locatie'
            self.label_WarningCustomBorefield: str = 'With the selected values a customized bore field will be ' \
                                                     'calculated. This will dramatically increase the calculation time.'
            self.label_WarningDepth: str = 'The calculated size is below the suggested minimum of 15 m. The ' \
                                           'calculation may be incorrect.'
            return
        if Lang == 3:  # French # Thanks to Felix Arjuna
            self.label_Language: str = 'Languange:'
            self.pushButton_SaveScenario: str = 'Mettre à jour le scénario'
            self.pushButton_AddScenario: str = 'Ajouter un scénario'
            self.pushButton_DeleteScenario: str = 'Supprimer un scénario'
            self.scenarioStr: str = 'Scénario'
            self.pushButton_Start: str = 'Démarrer'
            self.pushButton_Cancel: str = 'Sortie'
            self.pushButton_General: str = 'Forage \net terre'
            self.pushButton_thermalDemands: str = 'Demande \nthermique'
            self.pushButton_Results: str = 'Résultats'
            self.label_Status: str = 'Progrès: '
            self.pushButton_SaveScenariosExternal: str = 'Enregistrer les scénarios \nen externe'
            self.pushButton_LoadScenarios: str = 'Charger les scénarios \nde l\'extérieur'
            self.label_Borehole_earth: str = 'Forage et terre'
            self.label_Earth_Properties: str = 'Propriétés du trou de sonde et de la terre'
            self.checkBox_CalcDepth: str = 'Déterminer la profondeur requise'
            self.label_H: str = 'Profondeur du forage [m]: '
            self.label_BS: str = 'Espacement des trous de forage [m]: '
            self.label_lambdaEarth: str = 'Conductivité du sol [W/mK]: '
            self.label_GroundTemp: str = 'Température du sol à l\'infini [°C]: '
            self.label_BoreholeResistance: str = 'Résistance équivalente du trou de forage [mK/W]: '
            self.label_WidthField: str = 'Largeur du champ rectangulaire [#]: '
            self.label_LengthField: str = 'Longueur du champ rectangulaire [#]: '
            self.label_TempConstraints: str = 'Contraintes de température et période de simulation'
            self.label_TempMin: str = 'Température minimale [°C]: '
            self.label_TempMax: str = 'Température maximale [°C]: '
            self.label_SimulationTime: str = 'Période de simulation [années]: '
            self.pushButton_NextGeneral: str = '  suivant  '
            self.pushButton_PreviousThermal: str = '  précédente  '
            self.label_Size: str = 'Profondeur du trou de sonde: '
            self.checkBox_Legend: str = 'Afficher la légende?'
            self.pushButton_SaveData: str = 'Enregistrer les résultats'
            self.pushButton_SaveFigure: str = 'Sauvegarder la figure'
            self.X_Axis: str = 'Heure [année]'
            self.Y_Axis: str = 'Température [°C]'
            self.BaseCooling: str = 'Base de refroidissement'
            self.BaseHeating: str = 'Chauffage de base'
            self.PeakCooling: str = 'Refroidissement maximal'
            self.PeakHeating: str = 'Pic de chauffage'
            self.label_ThermalDemandsTitle: str = 'Demande thermique'
            self.label_Import: str = 'Importation'
            self.checkBox_Import: str = 'Demande d\'importation?'
            self.label_ThermalDemands: str = 'Demande thermique'
            self.label_pH: str = 'Pic de chauffage'
            self.label_pC: str = 'Pic de refroidissement'
            self.label_HL: str = 'Charge de chauffage'
            self.label_CL: str = 'Charge de refroidissement'
            self.label_UnitPeak: str = 'Unité de pointe: '
            self.label_UnitLoad: str = 'Unité de charge: '
            self.label_Jan: str = 'Janvier'
            self.label_Feb: str = 'Février'
            self.label_Mar: str = 'Mars'
            self.label_Apr: str = 'Avril'
            self.label_May: str = 'Mai'
            self.label_Jun: str = 'Juin'
            self.label_Jul: str = 'Juillet'
            self.label_Aug: str = 'Août'
            self.label_Sep: str = 'Septembre'
            self.label_Oct: str = 'Octobre'
            self.label_Nov: str = 'Novembre'
            self.label_Dec: str = 'Décembre'
            self.label_DataType: str = 'Type de fichier: '
            self.label_Filename: str = 'Nom de fichier: '
            self.label_SheetName: str = 'Nom de la feuille: '
            self.pushButton_load: str = 'Chargement'
            self.page_File: str = 'Fichier de données'
            self.page_DataLocation: str = 'Emplacement des données dans le fichier'
            self.label_dataColumn: str = 'Demande thermique: '
            self.label_DataUnit: str = 'Données de l\'unité: '
            self.label_HeatingLoadLine: str = 'Ligne de charge de chauffage: '
            self.label_CoolingLoadLine: str = 'Ligne de charge de refroidissement: '
            self.label_combined: str = 'Ligne de charge: '
            self.label_TimeStep: str = 'Pas de temps: '
            self.label_DateLine: str = 'Ligne de date: '
            self.comboBox_dataColumn: list = ['2 colonnes', '1 colonne']
            self.comboBox_timeStep: list = ['1 Std.', '15 Min.', 'Automatique']
            self.pushButton_calculate: str = 'Calculer'
            self.ErrorMassage: str = 'Erreur!'
            self.UnableDataFormat: str = 'Impossible d\'ouvrir le format de données sélectionné!'
            self.ChooseCSV: str = 'Choisissez csv pour charger le fichier de données.'
            self.ChooseXLS: str = 'Choisissez xlsx pour charger le fichier de données'
            self.ChooseXLSX: str = 'Choisissez xls pour charger le fichier de données'
            self.NoFileSelected: str = 'Aucun fichier sélectionné.'
            self.ValueError: str = 'Erreur de valeur : vérifiez les colonnes sélectionnées'
            self.ColumnError: str = 'Colonne incorrecte : vérifiez les colonnes sélectionnées'
            self.ChoosePKL: str = 'Choisir pkl pour charger les scénarios'
            self.SaveFigure: str = 'Choisissez l\'emplacement png pour enregistrer la figure'
            self.SaveData: str = 'Choisissez l\'emplacement csv pour enregistrer les résultats'
            self.SavePKL: str = 'Choisissez un emplacement pkl pour enregistrer les scénarios'
            self.label_WarningCustomBorefield: str = 'With the selected values a customized bore field will be ' \
                                                     'calculated. This will dramatically increase the calculation time.'
            self.label_WarningDepth: str = 'The calculated size is below the suggested minimum of 15 m. The ' \
                                           'calculation may be incorrect.'
            return
        if Lang == 4:  # Italian # Thanks to Felix Arjuna
            self.label_Language: str = 'Languange:'
            self.pushButton_SaveScenario: str = 'Aggiorna scenario'
            self.pushButton_AddScenario: str = 'Aggiungi scenario'
            self.pushButton_DeleteScenario: str = 'Cancella scenario'
            self.scenarioStr: str = 'Scenario'
            self.pushButton_Start: str = 'Inizia'
            self.pushButton_Cancel: str = 'Esci'
            self.pushButton_General: str = 'Foro e \nterra'
            self.pushButton_thermalDemands: str = 'Richieste \ntermiche'
            self.pushButton_Results: str = 'Risultati'
            self.label_Status: str = 'Progressi: '
            self.pushButton_SaveScenariosExternal: str = 'Salva scenari \nesternamente'
            self.pushButton_LoadScenarios: str = 'Carica scenari \ndall\'esterno'
            self.label_Borehole_earth: str = 'Foro e terra'
            self.label_Earth_Properties: str = 'Proprietà del foro e della terra'
            self.checkBox_CalcDepth: str = 'Determinare la profondità richiesta'
            self.label_H: str = 'Profondità foro [m]: '
            self.label_BS: str = 'Spaziatura del foro [m]: '
            self.label_lambdaEarth: str = 'Conducibilità del terreno [W/mK]: '
            self.label_GroundTemp: str = 'Temperatura del terreno all\'infinito [°C]: '
            self.label_BoreholeResistance: str = 'Resistenza equivalente del foro [mK/W]: '
            self.label_WidthField: str = 'Larghezza del campo rettangolare [#]: '
            self.label_LengthField: str = 'Lunghezza del campo rettangolare [#]: '
            self.label_TempConstraints: str = 'Vincoli di temperatura e periodo di simulazione'
            self.label_TempMin: str = 'Temperatura minima [°C]: '
            self.label_TempMax: str = 'Temperatura massima [°C]: '
            self.label_SimulationTime: str = 'Periodo di simulazione [anni]: '
            self.pushButton_NextGeneral: str = '  successivo  '
            self.pushButton_PreviousThermal: str = '  precedente  '
            self.label_Size: str = 'Profondità del foro:  '
            self.checkBox_Legend: str = 'Mostra la legenda?'
            self.pushButton_SaveData: str = 'Salva i risultati'
            self.pushButton_SaveFigure: str = 'Salva figura'
            self.X_Axis: str = 'Tempo [anno]'
            self.Y_Axis: str = 'Temperatura [°C]'
            self.BaseCooling: str = 'Base raffreddamento'
            self.BaseHeating: str = 'Base riscaldamento'
            self.PeakCooling: str = 'Picco raffreddamento'
            self.PeakHeating: str = 'Picco di riscaldamento'
            self.label_ThermalDemandsTitle: str = 'Richieste termiche'
            self.label_Import: str = 'Importazione'
            self.checkBox_Import: str = 'Richieste di \nimportazione?'
            self.label_ThermalDemands: str = 'Richieste termiche'
            self.label_pH: str = 'Picco di riscaldamento'
            self.label_pC: str = 'Picco di raffreddamento'
            self.label_HL: str = 'Carico di riscaldamento'
            self.label_CL: str = 'Carico di raffreddamento'
            self.label_UnitPeak: str = 'Unità di picco: '
            self.label_UnitLoad: str = 'Unità di carico: '
            self.label_Jan: str = 'Gennaio'
            self.label_Feb: str = 'Febbraio'
            self.label_Mar: str = 'Marzo'
            self.label_Apr: str = 'Aprile'
            self.label_May: str = 'Maggio'
            self.label_Jun: str = 'Giugno'
            self.label_Jul: str = 'Luglio'
            self.label_Aug: str = 'Agosto'
            self.label_Sep: str = 'Settembre'
            self.label_Oct: str = 'Ottobre'
            self.label_Nov: str = 'Novembre'
            self.label_Dec: str = 'Dicembre'
            self.label_DataType: str = 'Tipo di file: '
            self.label_Filename: str = 'Nome file: '
            self.label_SheetName: str = 'Nome foglio:  '
            self.pushButton_load: str = 'Caricare'
            self.page_File: str = 'File dati'
            self.page_DataLocation: str = 'Posizione dati nel file'
            self.label_dataColumn: str = 'Richieste termiche: '
            self.label_DataUnit: str = 'Dati \ndell\'unità:  '
            self.label_HeatingLoadLine: str = 'Linea di carico di riscaldamento: '
            self.label_CoolingLoadLine: str = 'Linea del carico di raffreddamento: '
            self.label_combined: str = 'Linea di carico: '
            self.label_TimeStep: str = 'Passo temporale: '
            self.label_DateLine: str = 'Linea della data: '
            self.comboBox_dataColumn: list = ['2 colonne', '1 colonna']
            self.comboBox_timeStep: list = ['1 Ora', '15 Min.', 'Automatico']
            self.pushButton_calculate: str = 'Calcola'
            self.ErrorMassage: str = 'Errore!'
            self.UnableDataFormat: str = 'Impossibile aprire il formato dati selezionato!'
            self.ChooseCSV: str = 'Scegli csv per caricare il file dei dati'
            self.ChooseXLS: str = 'Scegli xlsx per caricare il file di dati'
            self.ChooseXLSX: str = 'Scegli xls per caricare il file di dati'
            self.NoFileSelected: str = 'Nessun file selezionato.'
            self.ValueError: str = 'Errore di valore: controlla le colonne selezionate'
            self.ColumnError: str = 'Colonna errata: controlla le colonne selezionate'
            self.ChoosePKL: str = 'Scegliere pkl per caricare gli scenari'
            self.SaveFigure: str = 'Scegli il percorso png per salvare la figura'
            self.SaveData: str = 'Scegli il percorso csv per salvare i risultati'
            self.SavePKL: str = 'Scegli il percorso pkl per salvare gli scenari'
            self.label_WarningCustomBorefield: str = 'With the selected values a customized bore field will be ' \
                                                     'calculated. This will dramatically increase the calculation time.'
            self.label_WarningDepth: str = 'The calculated size is below the suggested minimum of 15 m. The ' \
                                           'calculation may be incorrect.'
            return
